#
#   
#
# Copyright  1990-2006 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation. 
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt). 
# 
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA 
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 or visit www.sun.com if you need additional
# information or have any questions. 
#
######################################################################
#
# Module's Component Configuration file
#
# Remember: It is up to the module itself to impose rules of
# how to compile the options. All the global Makefile needs
# is the final def. of Java and native file lists and some
# other def. (like VPATH)
#
######################################################################

# Source files for the ( satsa ) module
#
MODULE_SATSA_COMMON_JAVA_FILES += \
    $(JSR_177_COMMON)/classes/com/sun/satsa/security/SecurityInitializer.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/lang/UnsupportedOperationException.java

# Same classes are included in JSR 172 as well.
# Avoid double inclusion.
ifneq ($(USE_JSR_172), true)
MODULE_SATSA_COMMON_JAVA_FILES += \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/rmi/Remote.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/rmi/RemoteException.java
endif

MODULE_SATSA_CRYPTO_JAVA_FILES += \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/Signature.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/Key.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/MessageDigest.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/NoSuchAlgorithmException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/InvalidKeyException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/PublicKey.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/KeyException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/KeyFactory.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/SignatureException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/DigestException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/GeneralSecurityException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/InvalidAlgorithmParameterException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/spec/KeySpec.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/spec/EncodedKeySpec.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/spec/InvalidKeySpecException.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/spec/X509EncodedKeySpec.java \
    $(JSR_177_DIR)/src/cldc_application/satsa/classes/java/security/spec/AlgorithmParameterSpec.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/BadPaddingException.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/Cipher.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/IllegalBlockSizeException.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/NoSuchPaddingException.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/ShortBufferException.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/spec/SecretKeySpec.java \
    $(JSR_177_DIR)/src/share/satsa/classes/javax/crypto/spec/IvParameterSpec.java \
    $(JSR_177_DIR)/src/share/crypto/classes/com/sun/satsa/crypto/RSAPublicKey.java
    
MODULE_SATSA_JCRMI_JAVA_FILES += \
    $(JSR_177_DIR)/src/cldc_application/protocol/jcrmi/classes/com/sun/midp/io/j2me/jcrmi/Protocol.java

MODULE_SATSA_APDU_JAVA_FILES += \
    $(JSR_177_DIR)/src/cldc_application/protocol/apdu/classes/com/sun/midp/io/j2me/apdu/Protocol.java

# Define APDU sources which depend on options
#
# JSR_177_APDU_MANAGER=simple
ifeq ($(JSR_177_APDU_MANAGER),simple)
vpath % $(JSR_177_DIR)/src/cldc_application/protocol/apdu/simple/native
endif

# JSR_177_APDU_MANAGER=carddevice & JSR_177_APDU_CARDDEVICE=platformcarddevice
ifeq ($(JSR_177_APDU_CARDDEVICE),platformcarddevice)
vpath % $(JSR_177_DIR)/src/cldc_application/protocol/apdu/native
endif

# Java card constants
#
JAVACARD_CLASSES = $(MIDP_OUTPUT_DIR)/javacard_classes

# Tools and applets
#
ifeq ($(JSR_177_APDU_PLATFORM_API), simulator)
all_tools :: $(JAVACARD_CLASSES) $(BINDIR) $(JCRMIC_TOOL) $(SIM_TOOL)
JAVAC ?= JAVAC_CMD
else
all_tools :: $(JAVACARD_CLASSES) $(BINDIR) $(JCRMIC_TOOL)
endif

# Include jsr 177 properties in Configuration
#
SUBSYSTEM_CONFIGURATION_INPUT_FILES += $(JSR_177_PROPERTY_FILES)

